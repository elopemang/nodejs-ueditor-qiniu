var path = require('path');
var url = require('url');
var os = require('os');
var fs = require('fs');
var fse = require('fs-extra');
var Busboy = require('busboy');
var util = require('./util');
var qiniu = require('qiniu');
var config = {
    configfile: '',
    access_key:'',
    secret_key:'',
    bucket:'',
    mode: 'local',
    staticPath: '',
};

var ueditor = function(c) {
    setConfig(c);
    return function (req, res, next) {
        _ueditor(req, res, next);
    }
};

var setConfig = function(c) {
    for (var i in c) {
        config[i] = c[i];
    }
    //定义配置
    qiniu.conf.ACCESS_KEY = config.access_key;
    qiniu.conf.SECRET_KEY = config.secret_key;
    qiniu.conf.BUCKET = config.bucket;
    util.setConfig(config);
}
var _ueditor = function(req, res, next) {
    switch (req.query.action) {
        case 'config':
            res.setHeader('Content-Type', 'application/json');
            res.redirect(config.configFile);
            break;
        case 'uploadimage':
            uploadfile(req, res);
            break;
        case 'listimage':
            listfile(req, res, '.jpg,.jpeg,.png,.gif,.ico,.bmp');
            break;
        case 'uploadscrawl':
            uploadscrawl(req, res);
            break;
        case 'uploadfile':
            uploadfile(req, res);
            break;
        case 'uploadvideo':
            uploadfile(req, res);
            break;
        case 'listfile':
            listfile(req, res, [".png", ".jpg", ".jpeg", ".gif", ".bmp",
                ".flv", ".swf", ".mkv", ".avi", ".rm", ".rmvb", ".mpeg", ".mpg",
                ".ogg", ".ogv", ".mov", ".wmv", ".mp4", ".webm", ".mp3", ".wav", ".mid",
                ".rar", ".zip", ".tar", ".gz", ".7z", ".bz2", ".cab", ".iso",
                ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx", ".pdf", ".txt", ".md", ".xml"].join(','));
            break;
    }
}

//文件上传
var uploadfile = function (req, res) {
    var busboy = new Busboy({ headers: req.headers });
    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {
        var isReturn = false;
        save(file, filename, req, function (err, url) {
            //防止多次res.end()
            if (isReturn) return;
            isReturn = true;
            //console.log(req.body);
            var r = {
                'url': url,
                //'title': req.body.pictitle,
                'original': filename,
            }
            if (err) {
                r.state = 'ERROR';
            } else r.state = 'SUCCESS';
            res.json(r);
        });
    });
    req.pipe(busboy);
}


//获取本地文件
var save = function (file, filename, req, callback) {
    var realName = util.getFileName(path.extname(filename));
    var dPath = util.getRealDynamicPath(req);
    var saveTo = path.join(os.tmpDir(), realName);
    file.pipe(fs.createWriteStream(saveTo));
    file.on('end', function() {
        if (config.mode == 'qiniu') {
            var id = setTimeout(function() {
                callback('timeout');
            }, 10000);
            qiniuUpload(req, saveTo, callback);
        } else {
            var readPath = path.join(config.staticPath, dPath, realName);
            fse.move(saveTo, readPath, function(err) {
                if (err) {
                    callback(err);
                } else {
                    callback(null, dPath + '/' + realName);
                }
            });
        }
    });
}

//七牛上传
var qiniuUpload  = function(req, imgPath, callback){

    //要上传的空间
    var bucket = 'rmrbpublic';
    //上传到七牛后保存的文件名
    var key = new Date().getTime() + 'testdemo.png';
    //获取token
    var token = uptoken(bucket, key);
    //要上传文件的本地路径
    var filePath = imgPath;
    //开始上传
    uploadFile(token, key, filePath,callback);

}

//构建上传策略函数
var uptoken = function(bucket, key) {
  var putPolicy = new qiniu.rs.PutPolicy(bucket+":"+key);
  return putPolicy.token();
}

//构造上传函数
var uploadFile = function(uptoken, key, localFile,callback) {
  var extra = new qiniu.io.PutExtra();
    qiniu.io.putFile(uptoken, key, localFile, extra, function(err, ret) {
      if(!err) {
        // 上传成功， 处理返回值
        console.log(ret.hash, ret.key, ret.persistentId);
        callback(null, 'http://img.didoxy.com' + '/' + ret.key);
      } else {
        // 上传失败， 处理返回代码
        console.log(err);
        callback(null, '');
      }
  });
}

module.exports = ueditor;
